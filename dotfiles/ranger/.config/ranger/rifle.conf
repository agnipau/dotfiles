# vim:ft=cfg
#
# rifle config file.

# Websites.
ext x?html?, X, flag f = firefox -- "$@"

# Miscellanous.
# Define the "editor" for text files as first action.
mime  ^text, label editor = ${VISUAL:-$EDITOR} -- "$@"
mime  ^text, label pager  = "$PAGER" -- "$@"
!mime ^text, label editor, ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} -- "$@"
!mime ^text, label pager,  ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"

ext 1                          = man "$1"
ext s[wmf]c, has zsnes, X      = zsnes "$1"
ext s[wmf]c, has snes9x-gtk, X = snes9x-gtk "$1"
ext nes, has fceux, X          = fceux "$1"
ext exe                        = wine "$1"
name ^[mM]akefile$             = make

# Programming languages.
ext py  = python -- "$1"
ext pl  = perl -- "$1"
ext rb  = ruby -- "$1"
ext js  = node -- "$1"
ext sh  = sh -- "$1"
ext php = php -- "$1"

# Audio without X.
mime ^audio|ogg$, terminal, = mpv -- "$@"
ext midi?,        terminal, = wildmidi -- "$@"

# Video/Audio with a GUI.
mime ^video, X, flag f = mpv -- "$@"

# Video without X.
mime ^video, terminal, !X, = mpv -- "$@"

# Documents.
ext pdf, X, flag f = zathura -- "$@"
ext pptx?|od[dfgpst]|docx?|sxc|xlsx?|xlt|xlw|gnm|gnumeric, has libreoffice, X, flag f = libreoffice "$@"
ext djvu, has zathura, X, flag f = zathura -- "$@"
ext epub, has ebook-viewer, X, flag f = ebook-viewer -- "$@"
ext mobi, has ebook-viewer, X, flag f = ebook-viewer -- "$@"
ext xbm, flag f = ${VISUAL:-EDITOR} -- "$@"

# Image Viewing.
mime ^image, X, flag f = pqiv -i --box-colors='#bbbbbb':'#282c34' --bind-key="@MONTAGE { h { montage_mode_shift_x(-1) } }" --bind-key="@MONTAGE { j { montage_mode_shift_y(1) } }" --bind-key "@MONTAGE { k { montage_mode_shift_y(-1) } }" --bind-key "@MONTAGE { l { montage_mode_shift_x(1) } }" --bind-key="j { goto_file_relative(-1) }" --bind-key="k { goto_file_relative(1) }" --bind-key="h { goto_file_relative(-1) }" --bind-key="l { goto_file_relative(1) }" --bind-key="d { command(rm $1) }" -- "$@"
#mime ^image, X, flag f = ~/bin/style --ranger-mode "$@"

# Archives.
# Avoid password prompt by providing empty password
ext 7z, has 7z = 7z -p l "$@" | "$PAGER"

# This requires atool.
ext ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,     = atool --list --each -- "$@" | "$PAGER"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, = atool --list --each -- "$@" | "$PAGER"
ext 7z|ace|ar|arc|bz2?|cab|cpio|cpt|deb|dgc|dmg|gz,  = atool --extract --each -- "$@"
ext iso|jar|msi|pkg|rar|shar|tar|tgz|xar|xpi|xz|zip, = atool --extract --each -- "$@"

# Listing and extracting archives without atool.
ext tar|gz|bz2|xz, = tar vvtf "$1" | "$PAGER"
ext tar|gz|bz2|xz, = for file in "$@"; do tar vvxf "$file"; done
ext bz2,           = for file in "$@"; do bzip2 -dk "$file"; done
ext zip,           = unzip -l "$1" | less
ext zip,           = for file in "$@"; do unzip -d "${file%.*}" "$file"; done
ext ace,           = unace l "$1" | less
ext ace,           = for file in "$@"; do unace e "$file"; done
ext rar,           = unrar l "$1" | less
ext rar,           = for file in "$@"; do unrar x "$file"; done

# Miscellanous.
# Define the editor for non-text files + pager as last action.
              !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = ask
label editor, !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = ${VISUAL:-$EDITOR} -- "$@"
label pager,  !mime ^text, !ext xml|json|csv|tex|py|pl|rb|js|sh|php = "$PAGER" -- "$@"

# The very last action, so that it's never triggered accidentally, is to execute a program.
mime application/x-executable = "$1"
