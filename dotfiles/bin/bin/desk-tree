#!/usr/bin/env bash
#
# A small script that shows the windows and their respective workspaces in a
# tree form.

# Store the current directory to return to it after.
cdir="$PWD"
# Create a temp dir used to store a directory hierarchy of empty files that
# reflects the windows and their respective workspaces in a tree form.
tmpdir="$(mktemp -d)"

# Box drawing symbols used in the output.
midsym='├──'
endsym='└──'

# Number of desktops - 1.
nde="$(( "$(xprop -root _NET_NUMBER_OF_DESKTOPS \
           | sed 's/_NET_NUMBER_OF_DESKTOPS(CARDINAL) = //')" - 1 ))"

# Create an array from 0 to the number of desktops.
lde=0
for ((c=1; c<="$nde"; c++)); do
  lde+=" $c"
done

# Create the directories that represents the workspaces.
for i in ${lde}; do
  mkdir "${tmpdir}/$i"
done

# Create an array from 1 to the number of windows.
lnslist=1
for ((c=2; c<=$(wmctrl -l | wc -l); c++)); do
  lnslist+=" $c"
done

# Create the files that represent the windows in their respective workspaces.
for p in ${lnslist}; do
  pde="$(wmctrl -l \
        | head -n"$p" \
        | tail -n1 \
        | cut -d' ' -f3)"
  pna="$(wmctrl -l \
        | head -n"$p" \
        | tail -n1 \
        | awk '{ print $4 }')"
  [[ "$pde" ]] && touch "${tmpdir}/${pde}/$RANDOM ${pna}"
done

# Enter the temporary directory.
cd "$tmpdir" || exit 1

# Print the output.
for d in *; do

  # Print the workspaces.
  # The active workspace is printed in bold color1, the rest in regular white.
  # shellcheck disable=SC2063
  if [[ "$d" == "$(wmctrl -d | grep '*' | cut -d' ' -f1)" ]]; then
    printf '%b\n' "\\e[1;31m$(wmctrl -d \
                    | head -n"$((d + 1))" \
                    | tail -n1 \
                    | cut -d' ' -f14)\\e[0m"
  else
    printf '%s\n' "$(wmctrl -d \
                    | head -n"$((d + 1))" \
                    | tail -n1 \
                    | cut -d' ' -f14)"
  fi

  # Print the windows aligned to their respective workspaces.
  #shellcheck disable=SC2012
  nw="$(ls "$d" | wc -l)"
  if [[ "$nw" -ge 1 ]]; then
    for w in "$d"/*; do
      ((cw+=1))
      if [[ "$cw" -lt "$nw" ]]; then
        printf '%s\n' "$midsym $(echo "$w" \
                                | sed "s_$d/__" \
                                | cut -d' ' -f2-10000)"
      else
        printf '%s\n' "$endsym $(echo "$w" \
                                | sed "s_$d/__" \
                                | cut -d' ' -f2-10000)"
      fi
    done
  fi
done
  
# Return to the original directory.
cd "$cdir" || exit 1
# Remove the temporary directory.
rm -rf "$tmpdir"
